openapi: 3.0.3
info:
  title: Speed-Dating
  description: >-
    Little marketplace to trade with other people
  version: 0.0.1
servers:
  - url: http://localhost:3000
paths:
  /api/market:
    get:
      summary: Returns the current market
      responses:
        '200': 
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Market"
  /api/market/{market_id}/{is_buy}/{quantity}/{price}/{user_id}/{pwd}:
    get:
      summary: Place a limit order
      parameters:
        - name: market_id
          in: path
          required: true
          description: The ID of market to place the limit order
          schema:
            type: integer
        - name: is_buy
          in: path
          required: true
          description: 0 for buy, 1 for sell order
          schema:
            type: integer
        - name: quantity
          in: path
          required: true
          description: Quantity of base to sell/buy
          schema:
            type: integer
        - name: price
          in: path
          required: true
          description: Price of the limit order (quote/base)
          schema:
            type: integer
        - name: user_id
          in: path
          required: true
          description: Id of the buyer/seller
          schema:
            type: integer
        - name: pwd
          in: path
          required: true
          description: password of the buyer/seller
          schema:
            type: string
      responses:
        '200': 
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: integer
  /api/user/balance/{user_id}:
    get:
     summary: Get balance of a user
     parameters:
        - name: user_id
          in: path
          required: true
          description: The ID of user 
          schema:
            type: integer
     responses:
      '200': 
        description: ok
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                balance:
                  type: array
                  items:
                    type: integer
  /api/user/create/{pwd}:
    get:
     summary: create a new user and return the id created
     parameters:
        - name: pwd
          in: path
          required: true
          description: pwd of user 
          schema:
            type: integer
     responses:
      '200': 
        description: ok
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer



components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          example: 412321321
        user_id:
          type: integer
          example: 123345
        price:
          type: integer
          example: 120
        quantity:
          type: integer
          example: 100
    Market:
      type: object
      properties:
        tokens:
          type: array
          items: 
            type: string
          example: [A,B,C]
        markets:
          type: array
          items: 
            type: object
            properties:
              id:
                type: object
                properties:
                  id:
                    type: number
                  base:
                    type: string
                  quote:
                    type: string
                  buy:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
    

                        